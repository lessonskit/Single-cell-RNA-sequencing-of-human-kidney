library(Seurat)
library(dplyr)
library(scran)
K1.data <- Read10X(data.dir = "/staging/yuzhenyuan/kidney1/kidney1_result/outs/filtered_feature_bc_matrix")
K1 <- CreateSeuratObject(counts = K1.data, project = "kidney1", min.cells = 8, min.features = 200)
K2.data <- Read10X(data.dir = "/staging/yuzhenyuan/kidney2/combine/kidney2_result/outs/filtered_feature_bc_matrix")
K2 <- CreateSeuratObject(counts = K2.data, project = "kidney2", min.cells = 6, min.features = 200)
K3.data <- Read10X(data.dir = "/staging/yuzhenyuan/kidney3/kidney3_result/outs/filtered_feature_bc_matrix")
K3 <- CreateSeuratObject(counts = K3.data, project = "kidney3", min.cells = 10, min.features = 200)
kid <- merge(x = K1, y = list(K2, K3))
kid[["percent.mt"]] <- PercentageFeatureSet(kid, pattern = "^MT-")
VlnPlot(kid, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
plot1 <- FeatureScatter(kid, feature1 = "nCount_RNA", feature2 = "percent.mt")
plot2 <- FeatureScatter(kid, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
CombinePlots(plots = list(plot1, plot2))
kid <- subset(kid, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 30)
kid <- NormalizeData(kid, normalization.method = "LogNormalize", scale.factor = 10000)
kid <- NormalizeData(kid)
kid <- FindVariableFeatures(kid, selection.method = "vst", nfeatures = 2000)
top10 <- head(VariableFeatures(kid), 10)
plot1 <- VariableFeaturePlot(kid)
plot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)
CombinePlots(plots = list(plot1, plot2))
iden <- as.factor(c(rep('kidney1',7221),rep('kidney2',5543),rep('kidney3',10602)))
kid@meta.data$orig.ident <- iden           
logNorm <- kid@assays$RNA@data
logNorm.1 <- logNorm[,1:7221]
logNorm.2 <- logNorm[,7222:12764]
logNorm.3 <- logNorm[,12765:23366]
fastMNNout <- fastMNN(logNorm.1, logNorm.2,logNorm.3, k=20, approximate=TRUE,cos.norm=FALSE)
cor.exp <- tcrossprod(fastMNNout$rotation, fastMNNout$corrected)
row.names(cor.exp) <- row.names(logNorm.1)
colnames(cor.exp) <- c(colnames(logNorm.1),colnames(logNorm.2),colnames(logNorm.3))
library(Matrix)
cor.exp.dgcMatr <- Matrix(cor.exp, sparse = TRUE) 
kid@assays$RNA@data <- cor.exp.dgcMatr
s.genes <-cc.genes$s.genes
g2m.genes<-cc.genes$g2m.genes
kid <- CellCycleScoring(kid, s.features = s.genes, g2m.features = g2m.genes, set.ident = TRUE)
all.genes <- rownames(kid)
kid <- ScaleData(kid, vars.to.regress = c("S.Score", "G2M.Score"), features = all.genes)
kid <- RunPCA(kid, pc.genes = kid@var.genes, npcs = 20, verbose = FALSE)
kid <- FindNeighbors(kid, dims = 1:20)
kid <- FindClusters(kid, resolution = 0.25)
kid <- RunUMAP(kid, dims = 1:20)
new.cluster.ids <- c(1, 2, 3, 4, 5, 6, 7,8,9)
names(new.cluster.ids) <- levels(kid)
kid <- RenameIdents(kid, new.cluster.ids)
DimPlot(kid, reduction = "umap", group.by = "orig.ident", pt.size = .1, split.by = 'orig.ident')
DimPlot(kid, reduction = "umap", group.by = "Phase", pt.size = .1)
DimPlot(kid, reduction = "umap", label = TRUE, pt.size = .1)
